# !/bin/bash

#设置路径和参数
THREADS=20
GENOME_DIR="/home/tan_baohua/data/NPC/5RNA/star-hg38"  # 替换为你的基因组索引目录
OUTPUT_DIR="/home/tan_baohua/adult-human-tissue/bam" # 输出目录

#创建输出目录（如果不存在）
mkdir -p $OUTPUT_DIR
#env=HiCLift

遍历所有 *_R1_001.fastq.gz 文件，并找到配对的 *_R2_001.fastq.gz 文件
## mapping
for i in Esophagus Bladder Blie Blood Spleen  Rectum Lymph Liver Marrow Muscle Skin Stomach Trachea Lymph Heart Smallintestine

do
  
  STAR \
    --runThreadN $THREADS \
    --genomeDir $GENOME_DIR \
    --readFilesIn ${i}_S1_L001_R1_001.fastq.gz ${i}_S1_L001_R2_001.fastq.gz \
    --soloCBwhitelist ${i}_Counts.cell_barcode.whilelist.txt  \
    --soloBarcodeMate 1 \
    --clip5pNbases 39 0 \
    --readFilesCommand zcat \
    --soloType CB_UMI_Simple \
    --soloCBstart 1 \
    --soloCBlen 16 \
    --soloUMIstart 17 \
    --soloUMIlen 10 \
    --soloStrand Reverse \
    --outFileNamePrefix "${OUTPUT_DIR}/${i}" \
    --outSAMtype BAM SortedByCoordinate \
    --soloCBmatchWLtype 1MM_multi_Nbase_pseudocounts \
    --soloUMIdedup 1MM_Directional_UMItools \
    --outSAMattributes NH HI nM AS CR UR CB UB GX GN sS sQ sM &&

  samtools view -@ 12 -hbf 64 -q 255 ${i}Aligned.sortedByCoord.out.bam > Sample${i}_unique_R1.bam &&
  samtools view -@ 12 -H Sample${i}_unique_R1.bam > Sample${i}_header.sam &&
  samtools view -@ 12 -F 16 Sample${i}_unique_R1.bam | awk -F '\t' 'BEGIN {OFS="\t"} {BASE = substr($10, 40, 1); if ($6 ~ /^40S[0-9]/ && BASE == "G") {print $0}}' > Sample${i}_SoftclipG_F.sam &&
   samtools view -@ 12 -f 16 Sample${i}_unique_R1.bam | awk -F '\t' 'BEGIN {OFS="\t"} { ALT = substr($10, length($10)-39, 1); if ($6 ~ /[0-9]M40S$/ && ALT == "C") {print $0}}' > Sample${i}_SoftclipG_R.sam &&
  cat Sample${i}_header.sam Sample${i}_SoftclipG_F.sam Sample${i}_SoftclipG_R.sam | samtools sort -@ 12 -O bam -o SoftclipG_Sample${i}.bam &&
  samtools index SoftclipG_Sample${i}.bam &&
  umi_tools dedup --per-cell -I SoftclipG_Sample${i}.bam --extract-umi-method=tag --umi-tag=UR --cell-tag=CR -S SoftclipG_Sample${i}_deduplicated.bam &&
  awk '{print "CB:Z:"$1}' ${i}_Counts.cell_barcode.whilelist.txt > Sample${i}_cell_barcode.txt &&
  samtools view -@ 12 -H SoftclipG_Sample${i}_deduplicated.bam > Sample${i}.SAM_header &&
  samtools view -@ 12 SoftclipG_Sample${i}_deduplicated.bam | LC_ALL=C grep -F -f Sample${i}_cell_barcode.txt > Sample${i}.filtered_SAM_body &&
  cat Sample${i}.SAM_header Sample${i}.filtered_SAM_body > Sample${i}.filtered.sam &&
  samtools view -@ 12 -b Sample${i}.filtered.sam > SoftclipG_Sample${i}_filtered.bam &&
  samtools view -@ 12 SoftclipG_Sample${i}_filtered.bam | awk 'BEGIN{OFS="\t"}{print $23}' > Sample${i}_cell_barcode_tmp.txt &&
  
#将实际需要并行化的部分放在一个子进程中
 bamToBed -i SoftclipG_Sample${i}_filtered.bam |  paste - Sample${i}_cell_barcode_tmp.txt |  awk 'BEGIN {OFS="\t"} { if($6=="+"){print $1, $2, $2+1, ".", $7, $6} else {print $1, $3-1, $3, ".", $7, $6}}' > ${i}.temp.txt &&
 sort -k1,1 -k2,2n -k6,6 ${i}.temp.txt > ${i}.temp.sort.txt &&
 (bedtools groupby -g 1,2,3,4,5,6 -c 1 -o count -i ${i}.temp.sort.txt | \
   awk 'BEGIN{OFS="\t"}{if ($1 ~ /^([1-9]|1[0-9]|2[0-2]|X|Y)$/) print $1, $2, $3, $5, $7, $6}' > Sample${i}.CTSS.fwd.rev.cell.barcode.bed ) &&
mkdir -p enhancer_call
infile=Sample${i}.CTSS.fwd.rev.cell.barcode.bed
base=$(basename ${infile} .CTSS.fwd.rev.cell.barcode.bed)
find `pwd` -name  Sample${i}.CTSS.fwd.rev.cell.barcode.bed > ./enhancer_call/bedlist_${base}.txt
(bash /home/tan_baohua/data/NPC/5RNA/enhancers-1.0/scripts/fixed_bidir_enhancers_10bp.sh  \
-f /home/tan_baohua/adult-human-tissue/bam/enhancer_call/bedlist_${base}.txt \
-m /home/tan_baohua/adult-human-tissue/gencode.v47.annotation.GRCH38.TSS.300.no.lncRNA.bed  \
-o ./enhancer_call/enhancercall_${base}/) &
done

#等待所有后台任务完成
wait
